# Generated by Django 5.2 on 2025-04-20 14:52

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0009_travelidea'),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название города')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название страны')),
                ('code', models.CharField(blank=True, max_length=10, null=True, verbose_name='Код страны')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Airport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Название аэропорта')),
                ('code', models.CharField(max_length=10, verbose_name='Код аэропорта')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='airports', to='api.city', verbose_name='Город')),
            ],
            options={
                'verbose_name': 'Аэропорт',
                'verbose_name_plural': 'Аэропорты',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='api.country', verbose_name='Страна'),
        ),
        migrations.CreateModel(
            name='FlightTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departure_date', models.DateField(verbose_name='Дата отправления')),
                ('departure_time', models.TimeField(verbose_name='Время отправления')),
                ('arrival_time', models.TimeField(verbose_name='Время прибытия')),
                ('duration', models.CharField(max_length=50, verbose_name='Время в пути')),
                ('economy_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена эконом-класса')),
                ('business_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена бизнес-класса')),
                ('has_transfer', models.BooleanField(default=False, verbose_name='Есть пересадка')),
                ('transfer_duration', models.PositiveIntegerField(blank=True, null=True, verbose_name='Длительность пересадки (в часах)')),
                ('recommendation_value', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Значение рекомендации (1-100)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('airlines', models.ManyToManyField(related_name='flights', to='api.airline', verbose_name='Авиакомпании')),
                ('from_airport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departure_flights', to='api.airport', verbose_name='Аэропорт отправления')),
                ('to_airport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arrival_flights', to='api.airport', verbose_name='Аэропорт прибытия')),
                ('transfer_city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.city', verbose_name='Город пересадки')),
            ],
            options={
                'verbose_name': 'Авиабилет',
                'verbose_name_plural': 'Авиабилеты',
                'ordering': ['-recommendation_value', 'departure_date'],
            },
        ),
        migrations.CreateModel(
            name='RailwayStation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Название вокзала')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='railway_stations', to='api.city', verbose_name='Город')),
            ],
            options={
                'verbose_name': 'Ж/Д вокзал',
                'verbose_name_plural': 'Ж/Д вокзалы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RailwayTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('departure_date', models.DateField(verbose_name='Дата отправления')),
                ('departure_time', models.TimeField(verbose_name='Время отправления')),
                ('arrival_time', models.TimeField(verbose_name='Время прибытия')),
                ('duration', models.CharField(max_length=50, verbose_name='Время в пути')),
                ('platzkart_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена плацкарта')),
                ('kupe_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена купе')),
                ('sv_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена СВ')),
                ('sitting_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена сидячего места')),
                ('recommendation_value', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Значение рекомендации (1-100)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('companies', models.ManyToManyField(related_name='train_tickets', to='api.railwaycompany', verbose_name='Ж/Д компании')),
                ('from_station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departure_trains', to='api.railwaystation', verbose_name='Вокзал отправления')),
                ('to_station', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='arrival_trains', to='api.railwaystation', verbose_name='Вокзал прибытия')),
            ],
            options={
                'verbose_name': 'Ж/Д билет',
                'verbose_name_plural': 'Ж/Д билеты',
                'ordering': ['-recommendation_value', 'departure_date'],
            },
        ),
        migrations.CreateModel(
            name='Tour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название тура')),
                ('image', models.FileField(help_text='Поддерживаются форматы JPG, PNG, AVIF, WEBP', upload_to='tours/', verbose_name='Фото тура')),
                ('rating', models.DecimalField(decimal_places=1, help_text='Например: 4.8', max_digits=3, verbose_name='Оценка')),
                ('stars', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Звезды отеля')),
                ('price_per_night', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена за ночь')),
                ('food_included', models.BooleanField(default=False, verbose_name='Питание включено')),
                ('pets_allowed', models.BooleanField(default=False, verbose_name='Можно с животными')),
                ('recommendation_value', models.IntegerField(default=50, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Значение рекомендации (1-100)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tours', to='api.city', verbose_name='Город')),
            ],
            options={
                'verbose_name': 'Тур',
                'verbose_name_plural': 'Туры',
                'ordering': ['-recommendation_value', '-created_at'],
            },
        ),
    ]
